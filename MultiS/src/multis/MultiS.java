/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package multis;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.HashMap;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MultiS extends javax.swing.JFrame {

    /**
     * Creates new form MultiS
     *
     * @param uuids
     * @param ids
     * @param din
     * @param dout
     */
    public MultiS(HashMap<String, Integer> uuids, HashMap<String, Integer> ids, DataInputStream din, DataOutputStream dout) {
        initComponents();
        new Thread() {
            @Override
            public void run() {
                try {
                    dout.writeUTF("Multiplicacion");
                    while (true) {
                        String str2 = "NO OPERATION", str, id, aux;
                        str = din.readUTF();
                        ParseaOperacion mensaje = new ParseaOperacion(str);
                        id = mensaje.id;
                        System.out.printf("ID: %s Operacion: %c  Operador1: %d  Operador2: %d \n", id, mensaje.operacion, mensaje.operador1, mensaje.operador2);

                        if (ids.containsKey(id)) {
                            int idCount = ids.get(id);
                            ids.put(id, idCount + 1);
                            System.out.printf("Ya lei %s  %d  veces \n", id, idCount + 1);

                        } else {
                            ids.put(id, 0);
                            switch (mensaje.operacion) {
                                case 'X' ->
                                    str2 = String.format("%d X %d = %d", mensaje.operador1, mensaje.operador2, mensaje.operador1 * mensaje.operador2);
                            }
                            if (!str2.equals("NO OPERATION") && (!mensaje.esResultado)) {
                                UUID uuidbin = UUID.randomUUID(); //Generates random UUID
                                str2 = mensaje.id + " " + uuidbin.toString() + " " + str2;
                                dout.writeUTF(str2);
                                dout.flush();
                                if (!historial.getText().equals("")) {
                                    aux = historial.getText();
                                    historial.setText(aux + " \n" + str2);
                                } else {
                                    historial.setText(str2);
                                }
                            }
                        }
                    }
                } catch (IOException e) {
                    System.out.println(e);
                }
                try {
                    dout.close();
                } catch (IOException ex) {
                    Logger.getLogger(MultiS.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        historial = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Yo sé multiplicar");

        historial.setColumns(20);
        historial.setRows(5);
        jScrollPane1.setViewportView(historial);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws IOException {
        HashMap<String, Integer> uuids = new HashMap<>();
        HashMap<String, Integer> ids = new HashMap<>();

        System.out.printf("Soy Multiplicacion \n Parámetros recibidos: \n");
        for (int i = 0; i < args.length; i++) {
            System.out.printf("args[%d] = %s \n", i, args[i]);
        }
        System.out.printf("\n\n\n");

        int puerto = Integer.parseInt(args[0]);
        Socket s = new Socket("localhost", puerto);

        DataInputStream din = new DataInputStream(s.getInputStream());
        DataOutputStream dout = new DataOutputStream(s.getOutputStream());
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MultiS(uuids, ids, din, dout).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea historial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

class ParseaOperacion {

    public char operacion;
    public int operador1, operador2;
    public boolean esResultado = false;
    public String uuid, id;

    ParseaOperacion(String st) {
        String[] divisiones = st.split(" ");
        id = divisiones[0];
        uuid = divisiones[1];
        if (divisiones.length > 5) {
            esResultado = true;
        }
        operacion = divisiones[3].charAt(0);
        operador1 = Integer.parseInt(divisiones[2]);
        operador2 = Integer.parseInt(divisiones[4]);
    }
}
